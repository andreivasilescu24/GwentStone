Starting audit...
[ERROR] C:\POO\Tema1-POO\.\src\fileio\CardInput.java:3:8: Unused import - com.fasterxml.jackson.annotation.JsonInclude. [UnusedImports]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:12:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'checkPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'checkPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:12:32: Parameter player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:12:48: Parameter player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:14:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:16:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:21:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getPlayerDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getPlayerDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:21:31: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:21:49: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:21:64: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:23:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:23:23: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:25: Line is longer than 100 characters (found 135). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:29:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getPlayerHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getPlayerHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:29:31: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:29:49: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:29:64: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:30: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:33: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:33:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:33:31: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:33:49: Parameter player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:33:65: Parameter player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:33:81: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:42:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'start_new_round' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'start_new_round' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:42:17: Name 'start_new_round' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:42:33: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:42:46: Parameter player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:42:62: Parameter player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:46:35: '10' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:46:63: '10' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:50:49: '10' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:51:49: '10' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:64:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:64:34: Name 'table_row_aux' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:65:13: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:65:27: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:70: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:70:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'endPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'endPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:70:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:70:31: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:70:44: Parameter player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:70:60: Parameter player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:70:76: Parameter end_player_turn_counter should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:70:80: Name 'end_player_turn_counter' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:76:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:77:21: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:77:49: '4' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:78:39: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:89:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:90:21: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:91:39: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:98:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:103: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:103:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'placeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'placeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:103:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:103:27: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:103:45: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:103:58: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:103:73: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:103:94: Parameter turn should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:105:22: Name 'card_to_place' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:107: Line is longer than 100 characters (found 162). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:110: Line is longer than 100 characters (found 207). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:111:71: '5' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:114: Line is longer than 100 characters (found 189). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:116: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:117: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:121:70: '5' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:124: Line is longer than 100 characters (found 189). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:126: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:127: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:133: Line is longer than 100 characters (found 207). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:134:71: '5' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:137: Line is longer than 100 characters (found 189). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:139: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:140: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:144:70: '5' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:147: Line is longer than 100 characters (found 189). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:149: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:150: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:158:19: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:159: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:161:15: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:162: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:169:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:169:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:169:32: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:169:50: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:169:65: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:171:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:171:23: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:173: Line is longer than 100 characters (found 135). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:176:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getPlayerMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getPlayerMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:176:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:176:31: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:176:49: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:176:64: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:177: Line is longer than 100 characters (found 135). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:181:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getCardsOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getCardsOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:181:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:181:33: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:181:51: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:181:64: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:183: Line is longer than 100 characters (found 160). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:184: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:187:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getCardAtPosition_helper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getCardAtPosition_helper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:187:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:187:21: Name 'getCardAtPosition_helper' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:187:46: Parameter coordinates should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:187:71: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:188:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:190:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:192:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:194:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:194:40: '3' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:201: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:201:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getCardAtPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getCardAtPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:201:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:201:35: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:201:53: Parameter coordinates should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:201:78: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:201:91: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:202:18: Name 'output_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:203:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:206:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:207: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:211:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getEnvironmentCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getEnvironmentCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:211:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:211:43: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:211:61: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:211:76: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:213:23: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:214: Line is longer than 100 characters (found 142). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:214:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:218: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:221: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:221:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'useEnvironmentCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'useEnvironmentCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:221:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:221:36: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:221:54: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:221:67: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:221:82: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:221:103: Parameter turn should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:222:18: Name 'my_env_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:223:16: Name 'my_env_card_name' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:225: Line is longer than 100 characters (found 134). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:229: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:229:50: Name 'my_env_card_ability' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:233: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:239:84: '3' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:240: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:240:50: Name 'my_env_card_ability' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:244: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:252: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:257:11: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:264:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getFrozenCardsOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getFrozenCardsOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:264:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:264:39: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:264:57: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:264:70: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:266:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:266:34: Name 'row_array_list' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:267:27: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:268:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:276:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'checkTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'checkTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:276:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:276:30: Parameter card should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:277:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:282:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'check_existsTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'check_existsTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:282:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:282:20: Name 'check_existsTank' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:282:37: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:282:50: Parameter turn should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:284:13: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:285:17: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:285:31: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:286:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:290:13: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:290:41: '4' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:291:17: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:291:31: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:292:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:298: Line is longer than 100 characters (found 162). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:298:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'cardUsesAttack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'cardUsesAttack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:298:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:298:32: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:298:50: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:298:63: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:298:84: Parameter coordinates_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:298:96: Name 'coordinates_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:298:118: Parameter coordinates_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:298:130: Name 'coordinates_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:298:152: Parameter turn should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:299:13: Name 'x_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:300:13: Name 'y_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:301:13: Name 'x_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:302:13: Name 'y_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:304:18: Name 'card_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:305:18: Name 'card_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:307: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:307:116: '3' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:310: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:311: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:311:32: Name 'new_card_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:312: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:313: Line is longer than 100 characters (found 134). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:314: Line is longer than 100 characters (found 128). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:317: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:322: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:322:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:326: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:333: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:334: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:338: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:339: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:343: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:344: Line is longer than 100 characters (found 127). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:350: Line is longer than 100 characters (found 163). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:350:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'cardUsesAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'cardUsesAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:350:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:350:33: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:350:51: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:350:64: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:350:85: Parameter coordinates_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:350:97: Name 'coordinates_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:350:119: Parameter coordinates_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:350:131: Name 'coordinates_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:350:153: Parameter turn should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:351:13: Name 'x_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:352:13: Name 'y_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:353:13: Name 'x_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:354:13: Name 'y_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:356:18: Name 'card_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:357:18: Name 'card_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:362: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:362:73: '3' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:364: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:366: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:367: Line is longer than 100 characters (found 148). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:370: Line is longer than 100 characters (found 169). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:371: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:371:128: '3' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:372: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:374: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:377: Line is longer than 100 characters (found 128). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:383: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:384: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:389: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:390: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:396: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:397: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:5: Class 'CardTypeCaster' looks like designed for extension (can be subclassed), but the method 'cast_cards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CardTypeCaster' final or making the method 'cast_cards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:17: Name 'cast_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:28: Parameter player_deck should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:49: Name 'player_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:62: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:12:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:12:23: Name 'card_in_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:13: Line is longer than 100 characters (found 155). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:13:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:14:29: Name 'new_environment_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:16:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:19:24: Name 'new_minion_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:28:5: Class 'CardTypeCaster' looks like designed for extension (can be subclassed), but the method 'cast_hero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CardTypeCaster' final or making the method 'cast_hero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:28:17: Name 'cast_hero' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:28:27: Parameter hero should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:28:43: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:29:14: Name 'new_environment_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:16:21: Name 'has_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:18:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'setHas_attacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'setHas_attacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:18:17: Name 'setHas_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:18:33: Parameter has_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:18:41: Name 'has_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:22:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'isHas_attacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'isHas_attacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:22:20: Name 'isHas_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:26:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:30:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:30:27: Parameter frozen should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:34:21: Parameter deckCard should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:43: Line is longer than 100 characters (found 128). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:43:21: Parameter mana should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:43:31: Parameter description should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:43:51: Parameter colors should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:43:77: Parameter name should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:43:90: Parameter frozen should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:43:106: Parameter has_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:43:114: Name 'has_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:52:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:56:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:60:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:64:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:68:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:68:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:72:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:72:32: Parameter description should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:76:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:76:27: Parameter colors should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:80:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:80:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Environment.java:5:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] C:\POO\Tema1-POO\.\src\main\Environment.java:9:24: Parameter deck_card should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Environment.java:9:34: Name 'deck_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:9: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:9:5: Class 'EnvironmentCardAbilities' looks like designed for extension (can be subclassed), but the method 'checkType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EnvironmentCardAbilities' final or making the method 'checkType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:9:27: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:9:45: Parameter my_env_card should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:9:54: Name 'my_env_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:9:67: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:9:80: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:9:95: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:10:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:12:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:13:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:13:14: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:15:14: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:17:29: '3' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:19:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:19:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:19:63: '5' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:21:13: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:27:7: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:28:5: Class 'EnvironmentCardAbilities' looks like designed for extension (can be subclassed), but the method 'Winterfell' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EnvironmentCardAbilities' final or making the method 'Winterfell' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:28:17: Name 'Winterfell' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:28:28: Parameter my_env_card should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:28:37: Name 'my_env_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:28:50: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:28:63: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:28:78: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:29:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:32:35: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:34: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:38: Line is longer than 100 characters (found 138). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:38:115: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:38:138: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:39:41: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:58:5: Class 'EnvironmentCardAbilities' looks like designed for extension (can be subclassed), but the method 'Firestorm' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EnvironmentCardAbilities' final or making the method 'Firestorm' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:58:17: Name 'Firestorm' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:58:27: Parameter my_env_card should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:58:36: Name 'my_env_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:58:49: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:58:62: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:58:77: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:59: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:60:20: Name 'aux_minion' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:61:33: Name 'copy_of_row' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:62:27: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:65: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:76:27: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:91: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:91:5: Class 'EnvironmentCardAbilities' looks like designed for extension (can be subclassed), but the method 'Heart_Hound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EnvironmentCardAbilities' final or making the method 'Heart_Hound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:91:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:91:17: Name 'Heart_Hound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:91:29: Parameter my_env_card should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:91:38: Name 'my_env_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:91:51: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:91:64: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:91:79: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:91:100: Parameter mirrorRow should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:92:13: Name 'max_health' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:93:18: Name 'card_to_add' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:96:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:96:22: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:97:17: Name 'aux_health' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:97:38: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:98:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:101:75: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:102: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\EnvironmentCardAbilities.java:102:33: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:7:17: Parameter deck_card should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:7:27: Name 'deck_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:9:18: '30' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:12:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:16:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:16:27: Parameter health should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:9:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:67:5: Method length is 196 lines (max allowed is 150). [MethodLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:90:20: Name 'player1_all_decks' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:90:39: Name 'player2_all_decks' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:92:11: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:96:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:96:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:98:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:105:13: Name 'index_player1_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:106:13: Name 'index_player2_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:109:30: Name 'player1_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:110:30: Name 'player2_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:117:24: Name 'card_caster' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:130:19: Name 'player1_hero' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:131:19: Name 'player2_hero' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:139:16: Name 'actual_action' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:158:13: Name 'end_player_turn_counter' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:160:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:162:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:163:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:165:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:167:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:169:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:170:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:172:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:174:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:176:18: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:176:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:179:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:182:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:184:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:186:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:186:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:187:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:187:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:189:21: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:190:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:192:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:193:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:193:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:195:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:196:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:198:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:199:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:199:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:201:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:202:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:204:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:206:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:208:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:212:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:214:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:215:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:215:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:217:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:218:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:220:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:222:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:222:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:223:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:223:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:225:21: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:226:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:228:18: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:228:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:231:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:234:29: Name 'coordinates_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:235:29: Name 'coordinates_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:241: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:242:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:244:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:247:29: Name 'coordinates_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:248:29: Name 'coordinates_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:254: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:11:19: Parameter deck_card should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:11:29: Name 'deck_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:17: Line is longer than 100 characters (found 156). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:17:19: Parameter mana should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:17:29: Parameter description should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:17:49: Parameter colors should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:17:75: Parameter name should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:17:88: Parameter health should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:17:100: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:17:118: Parameter frozen should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:17:134: Parameter has_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:17:142: Name 'has_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:23:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:27:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:31:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:31:27: Parameter health should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:35:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:35:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:3:8: Unused import - com.fasterxml.jackson.databind.node.ArrayNode. [UnusedImports]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:4:8: Unused import - fileio.ActionsInput. [UnusedImports]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9: Line is longer than 100 characters (found 156). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9:5: Class 'MinionCardAbilities' looks like designed for extension (can be subclassed), but the method 'checkType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCardAbilities' final or making the method 'checkType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9:27: Parameter card_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9:36: Name 'card_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9:51: Parameter card_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9:60: Name 'card_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9:75: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9:88: Parameter coordinates_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9:100: Name 'coordinates_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9:122: Parameter coordinates_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:9:134: Name 'coordinates_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:10:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:10:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:11: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:12:18: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:12:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:13: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:14:22: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:14:22: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:15: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18: Line is longer than 100 characters (found 157). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:5: Class 'MinionCardAbilities' looks like designed for extension (can be subclassed), but the method 'Weak_Knees' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCardAbilities' final or making the method 'Weak_Knees' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:17: Name 'Weak_Knees' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:28: Parameter card_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:37: Name 'card_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:52: Parameter card_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:61: Name 'card_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:76: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:89: Parameter coordinates_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:101: Name 'coordinates_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:123: Parameter coordinates_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:18:135: Name 'coordinates_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:19:17: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:19:51: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22: Line is longer than 100 characters (found 154). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:5: Class 'MinionCardAbilities' looks like designed for extension (can be subclassed), but the method 'Skyjack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCardAbilities' final or making the method 'Skyjack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:17: Name 'Skyjack' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:25: Parameter card_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:34: Name 'card_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:49: Parameter card_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:58: Name 'card_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:73: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:86: Parameter coordinates_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:98: Name 'coordinates_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:120: Parameter coordinates_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:22:132: Name 'coordinates_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:23:13: Name 'health_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:23:39: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:24:13: Name 'health_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:24:39: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:26:17: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:27:17: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30: Line is longer than 100 characters (found 157). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:5: Class 'MinionCardAbilities' looks like designed for extension (can be subclassed), but the method 'Shapeshift' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCardAbilities' final or making the method 'Shapeshift' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:17: Name 'Shapeshift' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:28: Parameter card_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:37: Name 'card_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:52: Parameter card_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:61: Name 'card_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:76: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:89: Parameter coordinates_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:101: Name 'coordinates_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:123: Parameter coordinates_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:30:135: Name 'coordinates_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:31:13: Name 'card_attacked_health' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:31:44: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:32:13: Name 'card_attacked_attack_damage' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:32:51: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:34:17: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:35:17: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:37:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:37:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:37:22: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:38:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:38:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:38:24: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42: Line is longer than 100 characters (found 156). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:5: Class 'MinionCardAbilities' looks like designed for extension (can be subclassed), but the method 'Gods_Plan' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCardAbilities' final or making the method 'Gods_Plan' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:17: Name 'Gods_Plan' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:27: Parameter card_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:36: Name 'card_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:51: Parameter card_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:60: Name 'card_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:75: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:88: Parameter coordinates_attacked should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:100: Name 'coordinates_attacked' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:122: Parameter coordinates_attacker should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:42:134: Name 'coordinates_attacker' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:43:17: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\MinionCardAbilities.java:43:51: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:3:8: Unused import - fileio.CardInput. [UnusedImports]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:16:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:16:26: Parameter round should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:20:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:25:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:28:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:28:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:36:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:36:25: Parameter hero should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:40:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:48:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:48:25: Parameter turn should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:52:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'isTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'isTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:56:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHandCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHandCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:60:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDeckCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDeckCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:64:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHandCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHandCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:64:30: Parameter handCards should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:68:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDeckCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDeckCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:68:30: Parameter deckCards should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:6:44: Name 'table_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:6:55: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:7:33: Name 'frontRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:8:33: Name 'frontRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:10:33: Name 'backRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:11:33: Name 'backRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:13:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getTable_cards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getTable_cards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:13:43: Name 'getTable_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:17:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setTable_cards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setTable_cards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:17:17: Name 'setTable_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:17:32: Parameter table_cards should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:17:63: Name 'table_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:21:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getFrontRow_player1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getFrontRow_player1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:21:32: Name 'getFrontRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:25:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getFrontRow_player2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getFrontRow_player2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:25:32: Name 'getFrontRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:29:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getBackRow_player1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getBackRow_player1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:29:32: Name 'getBackRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:33:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getBackRow_player2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getBackRow_player2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:33:32: Name 'getBackRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:37:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setFrontRow_player1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setFrontRow_player1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:37:17: Name 'setFrontRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:37:37: Parameter frontRow_player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:37:57: Name 'frontRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:41:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setFrontRow_player2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setFrontRow_player2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:41:17: Name 'setFrontRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:41:37: Parameter frontRow_player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:41:57: Name 'frontRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:45:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setBackRow_player1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setBackRow_player1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:45:17: Name 'setBackRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:45:36: Parameter backRow_player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:45:56: Name 'backRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:49:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setBackRow_player2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setBackRow_player2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:49:17: Name 'setBackRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:49:36: Parameter backRow_player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:49:56: Name 'backRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
Audit done.
Checkstyle ends with 630 errors.
