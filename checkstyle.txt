Starting audit...
[ERROR] C:\POO\Tema1-POO\.\src\fileio\CardInput.java:3:8: Unused import - com.fasterxml.jackson.annotation.JsonInclude. [UnusedImports]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:6:8: Unused import - java.lang.reflect.Array. [UnusedImports]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:12:5: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'checkPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'checkPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:12:32: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:12:33: Parameter player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:12:49: Parameter player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:14:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:14:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:14:29: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:14:57: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:16:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:16:14: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:16:34: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:16:63: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:21:1: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getPlayerDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getPlayerDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:21:1: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:21:27: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:21:45: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:21:60: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:22:5: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:24:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:24:23: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:26: Line is longer than 100 characters (found 135). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:31:1: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getPlayerHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getPlayerHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:31:1: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:31:27: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:31:45: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:31:60: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:32: Line is longer than 100 characters (found 135). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:35:1: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:35:1: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:35:27: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:35:45: Parameter player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:35:61: Parameter player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:35:77: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:37:5: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:44:1: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'start_new_round' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'start_new_round' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:44:1: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:44:13: Name 'start_new_round' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:44:29: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:44:30: Parameter player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:44:46: Parameter player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:51:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:56:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:62:1: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'endPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'endPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:62:1: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:62:27: Parameter player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:62:43: Parameter player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:62:59: Parameter end_player_turn_counter should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:62:63: Name 'end_player_turn_counter' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:63:5: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:64:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:67:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:75:5: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:75:5: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:80:1: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'placeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'placeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:80:1: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:80:23: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:80:36: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:80:51: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:80:72: Parameter turn should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:81:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:82:22: Name 'card_to_place' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:83: Line is longer than 100 characters (found 186). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:83:61: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:83:118: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:83:176: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:84:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:85:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:86: Line is longer than 100 characters (found 204). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:86:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:86:25: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:88:25: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:89:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:92: Line is longer than 100 characters (found 204). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:92:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:92:25: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:94:25: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:105:1: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:105:1: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:105:28: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:105:46: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:105:61: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:106:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:108:13: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:108:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:108:26: Name 'aux_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:110: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:114:1: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getPlayerMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getPlayerMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:114:1: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:114:27: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:114:45: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:114:60: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:115: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:119:1: Class 'ActionInterpretor' looks like designed for extension (can be subclassed), but the method 'getCardsOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInterpretor' final or making the method 'getCardsOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:119:1: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:119:29: Parameter output should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:119:47: Parameter table should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:119:60: Parameter action should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:120:40: Name 'aux_table_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\ActionInterpretor.java:121: Line is longer than 100 characters (found 158). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:5: Class 'CardTypeCaster' looks like designed for extension (can be subclassed), but the method 'cast_cards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CardTypeCaster' final or making the method 'cast_cards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:17: Name 'cast_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:28: Parameter player_deck should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:49: Name 'player_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:9:62: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:12:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:12:23: Name 'card_in_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:13: Line is longer than 100 characters (found 155). [LineLength]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:13:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:14:29: Name 'new_environment_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:16:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:19:24: Name 'new_minion_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:28:5: Class 'CardTypeCaster' looks like designed for extension (can be subclassed), but the method 'cast_hero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CardTypeCaster' final or making the method 'cast_hero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:28:17: Name 'cast_hero' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:28:27: Parameter hero should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:28:43: Parameter player should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\CardTypeCaster.java:29:14: Name 'new_environment_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:16:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:20:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:20:27: Parameter frozen should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:24:21: Parameter deckCard should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:32:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:36:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:40:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:44:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:48:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:48:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:52:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:52:32: Parameter description should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:56:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:56:27: Parameter colors should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:60:5: Class 'DeckCard' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckCard' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\DeckCard.java:60:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Environment.java:5:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] C:\POO\Tema1-POO\.\src\main\Environment.java:9:24: Parameter deck_card should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Environment.java:9:34: Name 'deck_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:7:17: Parameter deck_card should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:7:27: Name 'deck_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:9:18: '30' is a magic number. [MagicNumber]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:12:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:16:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Hero.java:16:27: Parameter health should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:9:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:90:20: Name 'player1_all_decks' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:90:39: Name 'player2_all_decks' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:92:11: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:96:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:96:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:98:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:105:13: Name 'index_player1_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:106:13: Name 'index_player2_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:109:30: Name 'player1_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:110:30: Name 'player2_deck' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:117:24: Name 'card_caster' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:130:19: Name 'player1_hero' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:131:19: Name 'player2_hero' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:139:16: Name 'actual_action' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:158:13: Name 'end_player_turn_counter' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:160:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:162:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:170:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:171:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:175:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:176:17: 'else' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:176:21: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:180:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:182:22: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:182:22: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:184:26: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:187:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:188:30: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:190:29: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:190:29: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:191:33: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:191:33: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:193:33: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:194:25: '}' at column 25 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:195:34: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:196:37: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:196:37: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:198:37: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:199:29: '}' at column 29 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:200:38: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:201:37: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:201:37: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:203:37: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:204:33: '}' at column 33 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\POO\Tema1-POO\.\src\main\Main.java:205:42: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:5:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:11:19: Parameter deck_card should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:11:29: Name 'deck_card' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:17:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:21:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:25:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:25:27: Parameter health should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:29:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Minion.java:29:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:3:8: Unused import - fileio.CardInput. [UnusedImports]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:16:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:16:26: Parameter round should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:20:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:25:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:28:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:28:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:32:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getIndex' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getIndex' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:36:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:36:25: Parameter hero should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:40:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:44:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setIndex' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setIndex' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:44:26: Parameter index should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:48:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:48:25: Parameter turn should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:52:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'isTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'isTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:56:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHandCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHandCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:60:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDeckCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDeckCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:64:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHandCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHandCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:64:30: Parameter handCards should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:68:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDeckCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDeckCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Player.java:68:30: Parameter deckCards should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:6:44: Name 'table_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:6:55: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:7:33: Name 'frontRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:8:33: Name 'frontRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:10:33: Name 'backRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:11:33: Name 'backRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:13:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getTable_cards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getTable_cards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:13:43: Name 'getTable_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:17:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setTable_cards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setTable_cards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:17:17: Name 'setTable_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:17:32: Parameter table_cards should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:17:63: Name 'table_cards' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:21:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getFrontRow_player1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getFrontRow_player1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:21:32: Name 'getFrontRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:25:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getFrontRow_player2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getFrontRow_player2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:25:32: Name 'getFrontRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:29:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getBackRow_player1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getBackRow_player1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:29:32: Name 'getBackRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:33:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getBackRow_player2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getBackRow_player2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:33:32: Name 'getBackRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:37:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setFrontRow_player1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setFrontRow_player1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:37:17: Name 'setFrontRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:37:37: Parameter frontRow_player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:37:57: Name 'frontRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:41:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setFrontRow_player2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setFrontRow_player2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:41:17: Name 'setFrontRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:41:37: Parameter frontRow_player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:41:57: Name 'frontRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:45:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setBackRow_player1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setBackRow_player1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:45:17: Name 'setBackRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:45:36: Parameter backRow_player1 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:45:56: Name 'backRow_player1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:49:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setBackRow_player2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setBackRow_player2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:49:17: Name 'setBackRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:49:36: Parameter backRow_player2 should be final. [FinalParameters]
[ERROR] C:\POO\Tema1-POO\.\src\main\Table.java:49:56: Name 'backRow_player2' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
Audit done.
Checkstyle ends with 259 errors.
